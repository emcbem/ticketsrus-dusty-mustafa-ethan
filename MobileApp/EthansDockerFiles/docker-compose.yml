version: '3.1'

services:
  db:
    container_name: postdb
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes: 
      - ../TestsRUS/20240212.07.58.45.sql:/docker-entrypoint-initdb.d/A_Init.sql
    ports:
      - 5435:5432
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready"]
    #   interval: 2s
    #   timeout: 1s
    #   retries: 1
    #   start_period: 6s 
    networks:
      otel:

  blazorapp:
    container_name: blazorapp
    build: ..
    ports:
      - 8070:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - TicketsDB=user id = postgres; password=postgres; server=db; database= postgres; port= 5432
    depends_on:
      - db
    healthcheck:
      test: wget --tries=1 http://localhost:8080/healthcheck || exit 1
      interval: 2s
      retries: 1
      start_period: 6s
      timeout: 1s
    restart: unless-stopped
    networks:
      otel:

  blackbox:
    container_name: blackbox
    image: prom/blackbox-exporter:v0.12.0
    ports:
    - 9115:9115
    command:
    - --config.file=/etc/blackbox/blackbox.yml
    volumes:
    - ./blackbox.yml:/etc/blackbox/blackbox.yml
    depends_on:
    - blazorapp
    networks:
      otel:

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.5.0
    ports:
    - 9090:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
    - blackbox
    networks:
      otel:

  grafana:
    container_name: grafana
    image: grafana/grafana:9.4.7
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - grafana-data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
    ports:
     - 3000:3000
    networks:
      otel:

  loki:
    image: grafana/loki:2.8.0
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:  
      - ./loki.yml:/etc/loki/local-config.yaml
    restart: unless-stopped
    ports:
      - 3100:3100
    networks:
      otel:

  otel-collector:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/releases
    container_name: otel
    hostname: otel
    image: otel/opentelemetry-collector-contrib:0.75.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel.yml:/etc/otel-collector-config.yaml
    restart: unless-stopped
    ports:
      - 8888:8888   # Prometheus metrics exposed by the collector
      - 8889:8889   # Prometheus exporter metrics
      - 4317:4317   # OTLP gRPC receiver
      - 4318:4318   # OTLP http receiver
      - 9200:55679  # zpages
      - 13133:13133 # Health check
    networks:
      otel:

networks:
  otel:

volumes:
  grafana-data: